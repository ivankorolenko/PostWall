{"version":3,"sources":["components/app-header/app-header.js","components/app-header/index.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/post-status-filter/index.js","components/post-status-filter/post-status-filter.js","components/post-list-item/index.js","components/post-list-item/post-list-item.js","components/post-list/index.js","components/post-list/post-list.js","components/post-add-form/index.js","components/post-add-form/post-add-form.js","components/app/app.js","components/app/index.js","index.js"],"names":["Header","styled","div","AppHeader","liked","allPosts","SearchPanel","props","state","term","onUpdateSearch","bind","event","target","value","this","setState","className","type","placeholder","onChange","React","Component","PostStatusFilter","buttons","name","label","map","filter","onFilterSelect","cssClass","key","onClick","PostListItem","onDelete","onToggleImrotant","onToggleLiked","classNames","important","like","PostList","posts","elements","item","id","itemProps","ListGroup","PostAddForm","text","onValueChange","onSubmit","preventDefault","onAdd","AppBlock","App","data","maxId","deleteItem","addItem","index","findIndex","elem","slice","body","newItem","items","length","includes","visiblePosts","filterPost","searchPost","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.756b6e29.chunk.js","sourcesContent":["import React from 'react';\r\nimport './app-header.css';\r\nimport styled from 'styled-components';\r\n\r\nconst Header = styled.div`\r\n    display: flex;\r\n    align-items: flex-end;\r\n    justify-content: space-between;\r\n    h1 {\r\n        font-size: 26px;\r\n        :hover{\r\n            color: blue;\r\n        }\r\n    } \r\n    h2 {\r\n        font-size: 1.2rem;\r\n        color: grey;\r\n    }\r\n`;\r\n\r\nconst AppHeader = ({liked, allPosts}) => {\r\n    return (\r\n        <Header>\r\n            <h1>Ivan Korolenko</h1>\r\n            <h2>{allPosts} записей, из них понравилось {liked}</h2>\r\n        </Header>\r\n    )\r\n}\r\n\r\nexport default AppHeader;","import AppHeader from './app-header';\r\nexport default AppHeader;","import SearchPanel from './search-panel';\r\nexport default SearchPanel;","import React from 'react';\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPanel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            term: ''\r\n        };\r\n\r\n        this.onUpdateSearch = this.onUpdateSearch.bind(this);\r\n    }\r\n\r\n    onUpdateSearch(event) {\r\n        const term = event.target.value;\r\n        this.setState({term});\r\n        this.props.onUpdateSearch(term);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <input\r\n            className=\"form-control search-input\"\r\n            type=\"text\"\r\n            placeholder=\"Поиск по записям\"\r\n            onChange={this.onUpdateSearch}/>\r\n        )\r\n    }\r\n}","import PostStatusFilter from './post-status-filter';\r\nexport default PostStatusFilter;","import React from 'react';\r\nimport './post-status-filter.css';\r\n\r\nexport default class PostStatusFilter extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.buttons = [\r\n            {name: 'all', label: 'Все'},\r\n            {name: 'like', label: 'Понравилось'}\r\n        ]\r\n    }\r\n    \r\n    render() {\r\n        const buttons = this.buttons.map(({name, label}) => {\r\n            const {filter, onFilterSelect} = this.props,\r\n                  active = filter === name,\r\n                  cssClass = active ? 'btn-info' : 'btn-outline-secondary';\r\n\r\n            return (\r\n                <button \r\n                    key={name} \r\n                    type=\"button\" \r\n                    className={`btn ${cssClass}`}\r\n                    onClick={() => onFilterSelect(name)}>\r\n                        {label}\r\n                </button>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <div className=\"btn-group\">\r\n                {buttons}\r\n            </div>\r\n        )\r\n    }\r\n}","import PostListItem from './post-list-item';\r\nexport default PostListItem;","import React, {Component} from 'react';\r\nimport './post-list-item.css';\r\n\r\nexport default class PostListItem extends Component {\r\n\r\n    render() {\r\n        const {label, onDelete, onToggleImrotant, onToggleLiked, important, like} = this.props;\r\n        let classNames = 'app-list-item d-flex justify-content-between';\r\n        \r\n        if (important) {\r\n            classNames += ' important';\r\n        }\r\n\r\n        if (like) {\r\n            classNames += ' like';\r\n        }\r\n\r\n        return (\r\n            <div className={classNames}>\r\n                <span \r\n                onClick={onToggleLiked} \r\n                className=\"app-list-item-label\">\r\n                    {label}\r\n                </span>\r\n                <div className=\"d-flex justify-content-center align-items-center\">\r\n                    <button \r\n                    type=\"button\" \r\n                    className=\"btn-star btn-sm\"\r\n                    onClick={onToggleImrotant}>\r\n                        <i className=\"fa fa-star\"></i>\r\n                    </button>\r\n                    <button \r\n                    type=\"button\" \r\n                    className=\"btn-trash btn-sm\"\r\n                    onClick={onDelete}>\r\n                        <i className=\"fa fa-trash-o\"></i>\r\n                    </button>\r\n                    <i className=\"fa fa-heart\"></i>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import PostList from './post-list';\r\nexport default PostList;","import React from 'react';\r\nimport PostListItem from '../post-list-item';\r\nimport {ListGroup} from 'reactstrap';\r\nimport './post-list.css';\r\n\r\nconst PostList = ({posts, onDelete, onToggleImrotant, onToggleLiked}) => {\r\n    const elements = posts.map(item => {\r\n        const {id, ...itemProps} = item;\r\n\r\n        return (\r\n            <li key={id} className=\"list-group-item\">\r\n                <PostListItem \r\n                    {...itemProps}\r\n                    onDelete={() => onDelete(id)}\r\n                    onToggleImrotant={() => onToggleImrotant(id)}\r\n                    onToggleLiked={() => onToggleLiked(id)}/>\r\n            </li>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <ListGroup className=\"app-list\">\r\n            {elements}\r\n        </ListGroup>\r\n    )\r\n}\r\n\r\nexport default PostList;","import PostAddForm from './post-add-form';\r\nexport default PostAddForm;","import React from 'react';\r\nimport './post-add-form.css';\r\n\r\nexport default class PostAddForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            text: ''\r\n        };\r\n\r\n        this.onValueChange = this.onValueChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onValueChange(event) {\r\n        this.setState({\r\n            text: event.target.value\r\n        });\r\n    }\r\n\r\n    onSubmit(event) {\r\n        event.preventDefault();\r\n        this.props.onAdd(this.state.text);\r\n        this.setState({\r\n            text: ''\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form \r\n                className=\"bottom-panel d-flex\"\r\n                onSubmit={this.onSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"О чём вы думаете сейчас?\"\r\n                    className=\"form-control new-post-label\"\r\n                    onChange={this.onValueChange}\r\n                    value={this.state.text}/>\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-secondary\">\r\n                    Добавить\r\n                </button>\r\n            </form>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nimport AppHeader from '../app-header';\r\nimport SearchPanel from '../search-panel';\r\nimport PostStatusFilter from '../post-status-filter';\r\nimport PostList from '../post-list';\r\nimport PostAddForm from '../post-add-form';\r\n\r\nimport './app.css';\r\nimport styled from 'styled-components';\r\n\r\nconst AppBlock = styled.div`\r\n    margin: 0 auto;\r\n    max-width: 800px;\r\n`;\r\n\r\nexport default class App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: [\r\n                {label: \"Пользователь может добавлять новые записи\", important: false, like: false, id: 1},\r\n                {label: \"Нажатие на корзину удаляет запись\", important: true, like: false, id: 2},\r\n                {label: \"Можно помечать записи звёздочкой как важные\", important: true, like: true, id: 3},\r\n                {label: \"Клик по тексту записи ставит лайк\", important: true, like: true, id: 4},\r\n                {label: '\"Поиск\" отфильтровывает записи по ходу ввода запроса', important: true, like: false, id: 5},\r\n                {label: \"Можно отфильтровать понравившиеся записи\", important: true, like: true, id: 6}\r\n            ],\r\n            term: '',\r\n            filter: 'all'\r\n        };\r\n\r\n        this.maxId = 7;\r\n\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n        this.addItem = this.addItem.bind(this);\r\n        this.onToggleImrotant = this.onToggleImrotant.bind(this);\r\n        this.onToggleLiked = this.onToggleLiked.bind(this);\r\n        this.onUpdateSearch = this.onUpdateSearch.bind(this);\r\n        this.onFilterSelect = this.onFilterSelect.bind(this);\r\n    }\r\n\r\n    deleteItem(id) {\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(elem => elem.id === id),\r\n                  newArr = [...data.slice(0, index), ...data.slice(index + 1)];\r\n\r\n                  return {\r\n                      data: newArr\r\n                  }\r\n        })\r\n    }\r\n\r\n    addItem(body) {\r\n        const newItem = {\r\n            label: body,\r\n            important: true,\r\n            like: false,\r\n            id: this.maxId++\r\n        };\r\n\r\n        this.setState(({data}) => {\r\n            const newArr = [...data, newItem];\r\n            \r\n            return {\r\n                data: newArr\r\n            }\r\n        });\r\n    }\r\n\r\n    onToggleImrotant(id) {\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(elem => elem.id === id),\r\n                  newArr = [\r\n                    ...data.slice(0, index), \r\n                    {...data[index], important: !data[index].important},\r\n                    ...data.slice(index + 1)\r\n                  ];\r\n\r\n            return {\r\n                data: newArr\r\n            }\r\n        });\r\n    }\r\n\r\n    onToggleLiked(id) {\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(elem => elem.id === id),\r\n                  newArr = [\r\n                    ...data.slice(0, index), \r\n                    {...data[index], like: !data[index].like},\r\n                    ...data.slice(index + 1)\r\n                  ];\r\n\r\n            return {\r\n                data: newArr\r\n            }\r\n        });\r\n    }\r\n\r\n    searchPost(items, term) {\r\n        if (term.length === 0) {\r\n            return items\r\n        } else {\r\n            return items.filter(item => item.label.includes(term))\r\n        }\r\n    }\r\n\r\n    filterPost(items, filter) {\r\n        if (filter === 'like') {\r\n            return items.filter(item => item.like)\r\n        } else {\r\n            return items\r\n        }\r\n    }\r\n\r\n    onUpdateSearch(term) {\r\n        this.setState({term});\r\n    }\r\n\r\n    onFilterSelect(filter) {\r\n        this.setState({filter});\r\n    }\r\n\r\n    render() {\r\n        const {data, term, filter} = this.state,\r\n              liked = data.filter(item => item.like === true).length,\r\n              allPosts = data.length,\r\n              visiblePosts = this.filterPost(this.searchPost(data, term), filter);\r\n\r\n        return (\r\n            <AppBlock>\r\n                <AppHeader\r\n                    liked={liked}\r\n                    allPosts={allPosts}/>\r\n                <div className=\"search-panel d-flex\">\r\n                    <SearchPanel onUpdateSearch={this.onUpdateSearch}/>\r\n                    <PostStatusFilter \r\n                        filter={filter}\r\n                        onFilterSelect={this.onFilterSelect}/>\r\n                </div>\r\n                <PostList \r\n                    posts={visiblePosts}\r\n                    onDelete={this.deleteItem}\r\n                    onToggleImrotant={this.onToggleImrotant}\r\n                    onToggleLiked={this.onToggleLiked}/>\r\n                <PostAddForm\r\n                    onAdd={this.addItem}/>\r\n            </AppBlock>\r\n        )\r\n    }\r\n} ","import App from './app';\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './index.css';\r\nimport App from './components/app/';\r\n\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n"],"sourceRoot":""}